swagger: '2.0'

schemes:
  - http
  - https

host: localhost:8085
basePath: /swagger-example/v1

info:
  version: 1.0.0
  title: Swagger Example
  description: Swagger example from alura
  termsOfService: http://localhost:8085/swagger-example/v1/user-term
  contact:
    name: Suport
    url: http://localhost:8085/swagger-example/v1/suport
    email: suport@swagger.example.com

consumes:
  - application/json
produces:
  - application/json

tags:
  - name: User
  - name: Address

paths:
  '/users':
    get:
      tags:
        - User
      summary: Retrieve users.
      description: Retrieve all users.
      operationId: getUsers
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid Request
        401:
          description: Unauthorized Request
        500:
          description: Server Error
    post:
      tags:
        - User
      summary: Create User.
      description: Create a new User.
      operationId: createUser
      security:
        - BasicAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: user_
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: Create Success
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid Request
        500:
          description: Server Error

  '/users/{id}':
    put:
      tags:
        - User
      summary: Update user.
      description: Update especific user
      operationId: updateUser
      security:
        - BasicAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id
          type: integer
          format: int64
          required: true
        - in: body
          name: user_
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        204:
          description: Update Success
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid Request
        401:
          description: Unauthorized Request
        500:
          description: Server Error
    delete:
      tags:
        - User
      summary: Delete user
      description: Delete especific user
      operationId: deleteUser
      security:
        - BasicAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id
          type: integer
          format: int64
          required: true
      responses:
        204:
          description: Deleted Success
        400:
          description: Invalid Request
        401:
          description: Unauthorized Request
        500:
          description: Server Error

  '/users/{id}/addresses':
    get:
      tags:
        - Address
      summary: Get user address
      description: Get address from especific user
      operationId: getUserAddress
      parameters:
        - in: path
          name: id
          type: integer
          format: int64
          required: true
        - in: query
          name: type
          type: string
          required: true
          enum:
            - home
            - company
        - in: body
          name: address
          required: true
          schema:
            $ref: '#/definitions/Address'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Address'
        400:
          description: Invalid Request
        401:
          description: Unauthorized Request
        500:
          description: Server Error
    post:
      tags:
        - Address
      summary: Create user address
      description: Create address from especific user
      operationId: createUserAddress
      security:
        - BasicAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: id
          type: integer
          format: int64
          required: true
        - in: body
          name: address_
          schema:
            $ref: '#/definitions/Address'
      responses:
        200:
          description: OK
        400:
          description: Invalid Request
        401:
          description: Unauthorized Request
        500:
          description: Server Error


  '/users/{userId}/addresses/{addressId}':
    put:
      tags:
        - Address
      summary: Update user address
      description: Update address from especific user
      operationId: updateUserAddress
      security:
        - BasicAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: userId
          type: integer
          format: int64
          required: true
        - in: path
          name: addressId
          type: integer
          format: int64
          required: true
        - in: body
          name: address_
          schema:
            $ref: '#/definitions/Address'
      responses:
        204:
          description: Update Success
        400:
          description: Invalid Request
        401:
          description: Unauthorized Request
        500:
          description: Server Error
    delete:
      tags:
        - Address
      summary: Delete user address
      description: Delete address from especific user
      operationId: deleteUserAddress
      security:
        - BasicAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: userId
          type: integer
          format: int64
          required: true
        - in: path
          name: addressId
          type: integer
          format: int64
          required: true
      responses:
        204:
          description: Deleted Success
        400:
          description: Invalid Request
        401:
          description: Unauthorized Request
        500:
          description: Server Error

securityDefinitions:
  BasicAuth:
    type: basic

security:
  - BasicAuth: []

definitions:

  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 234
      cpf:
        type: string
        minLength: 11
        maxLength: 11
        example: 01234567890
      name:
        type: string
        example: Gustavo Ames
      address:
        type: array
        items:
          $ref: '#/definitions/Address'

  Address:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 234
      street:
        type: string
        example: "Slater Avenue"